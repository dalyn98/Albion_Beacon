name: Release (Windows)

on:
  workflow_dispatch:
    inputs:
      version_override:
        description: "ex: v3.2.2"
        required: false
        type: string

permissions:
  contents: write

jobs:
  tag_and_release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Resolve version (strict)
        id: ver
        shell: bash
        run: |
          set -e
          if [ -n "${{ inputs.version_override }}" ]; then
            ver="${{ inputs.version_override }}"
          elif [ -f VERSION ]; then
            ver="$(tr -d '\r\n' < VERSION)"
          else
            echo "::error::VERSION file missing and no version_override provided."; exit 1
          fi
          if [ -z "$ver" ]; then
            echo "::error::Resolved version is empty. Check VERSION content."; exit 1
          fi
          if ! echo "$ver" | grep -Eq '^v[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "::error::Invalid version '$ver'. Use format like v3.2.1"; exit 1
          fi
          echo "version=$ver" >> "$GITHUB_OUTPUT"
          echo "Using version: $ver"

      - name: Create tag if missing
        shell: bash
        run: |
          TAG="${{ steps.ver.outputs.version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG exists."
          else
            git tag -a "$TAG" -m "Release $TAG"
            git push origin "$TAG"
          fi

      - name: Generate release notes
        id: notes
        uses: actions/github-script@v7
        with:
          script: |
            const tag = '${{ steps.ver.outputs.version }}';
            const notes = await github.repos.generateReleaseNotes({
              owner: context.repo.owner, repo: context.repo.repo, tag_name: tag
            });
            core.setOutput('body', notes.data.body);

      - name: Create GitHub Release (draft)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.version }}
          name: Release ${{ steps.ver.outputs.version }}
          body: ${{ steps.notes.outputs.body }}
          draft: true
          prerelease: true
